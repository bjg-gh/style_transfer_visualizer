[build-system]
requires = ["setuptools>=80"]
build-backend = "setuptools.build_meta"

[project]
name = "style-transfer-visualizer"
version = "1.1.0.dev2"
description = "A command-line tool for neural style transfer with PyTorch"
authors = [{ name = "Ben Goldsmith" }]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.12"
dependencies = [
    "tqdm",
    "imageio",
    "imageio-ffmpeg",
    "matplotlib",
    "pillow",
    "numpy",
    "tomlkit",
    "pydantic"
]

[project.optional-dependencies]
cpu = [
    "torch",
    "torchvision"
]
cu128  = [
    "torch",
    "torchvision"
]
dev = [
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "hypothesis",
    "pyright",
    "ruff",
    "pre-commit"
]

[tool.uv]
conflicts = [
  [
    { extra = "cpu" },
    { extra = "cu128" },
  ],
]

[tool.uv.sources]
torch = [
  { index = "pytorch-cpu", extra = "cpu" },
  { index = "pytorch-cu128", extra = "cu128" },
]
torchvision = [
  { index = "pytorch-cpu", extra = "cpu" },
  { index = "pytorch-cu128", extra = "cu128" },
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/cu128"
explicit = true

[project.scripts]
style-visualizer = "style_transfer_visualizer.cli:main"

[tool.ruff]
target-version = "py312"
line-length = 79

[tool.ruff.lint]
select = ["ALL"]
ignore = ["D107", "D203", "D212"]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = ["S101"]

[tool.ruff.lint.isort]
known-first-party = ["style_transfer_visualizer"]
combine-as-imports = true

[tool.ruff.format]
docstring-code-line-length = 72
quote-style = "double"

[tool.pyright]
include = ["src"]
exclude = ["**/__pycache__"]
reportMissingImports = true
reportMissingTypeStubs = false
pythonVersion = "3.12"
pythonPlatform = "All"
#typeCheckingMode = "strict"

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = "src"
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --cov=. --cov-report=term-missing --cov-report=html --cov-report=xml --cov-branch"
markers = [
    '''slow: marks tests as slow (deselect with '-m "not slow"')''',
    '''integration: marks tests that require external resources''',
    '''visual: marks tests that produce visual outputs'''
]
log_cli = true
log_cli_level = "INFO"
