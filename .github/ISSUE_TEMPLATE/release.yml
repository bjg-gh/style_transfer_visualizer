name: Release Checklist
description: Track the steps required to publish a new release
labels:
  - release
  - chore
title: Release: {{ inputs.version }}
body:
  - type: markdown
    attributes:
      value: |
        <!-- Refer to CONTRIBUTING.md (Releases & Versioning) for usage -->
        Use this checklist to coordinate the {{ inputs.version }} release.
  - type: markdown
    attributes:
      value: |
        ## Step-by-step workflow

        **1. Review the milestone**
        - Confirm every issue assigned to milestone {{ inputs.milestone }} is closed.
        - Capture any notable highlights for the release notes.

        **2. Prepare the release branch**
        ```sh
        git checkout main
        git pull origin main
        git checkout -b <issue-number>-release-{{ inputs.version }}
        ```

        **3. Update the versioned artifacts**
        - Edit `pyproject.toml` and set `[project] version` to {{ inputs.version }}.
        - Update `RELEASES.md` with a section for {{ inputs.version }}.

        **4. Commit and push**
        ```sh
        git add pyproject.toml RELEASES.md
        git commit -m "chore: bump version to {{ inputs.version }}"
        git push origin <issue-number>-release-{{ inputs.version }}
        ```

        **5. Open the release PR**
        - Title: `chore: release {{ inputs.version }}`
        - Link back to this issue with `Closes #<issue-number>`.

        **6. Merge, tag, and publish**
        - Squash and merge the PR after checks pass.
        - Tag locally and push:
          ```sh
          git tag {{ inputs.version }}
          git push origin {{ inputs.version }}
          ```
        - Publish the GitHub Release titled {{ inputs.version }} with the highlights collected earlier.

        **7. Wrap up**
        - Delete the release branch locally and on origin.
        - Note any follow-up tasks or announcements below.
  - type: input
    id: version
    attributes:
      label: Release version
      description: "Semantic version with leading v (example: v1.3.0)"
      placeholder: v1.3.0
    validations:
      required: true
  - type: input
    id: milestone
    attributes:
      label: Target milestone
      description: Milestone name that this release will close
      placeholder: v1.3 Video Polish
    validations:
      required: true
  - type: textarea
    id: scope
    attributes:
      label: Summary
      description: Major themes or highlights that will appear in release notes
      placeholder: Key improvements, notable fixes, UX updates...
  - type: checkboxes
    id: preparation
    attributes:
      label: Preparation
      description: Up-front checks before version changes
      options:
        - label: Review all issues completed in milestone {{ inputs.milestone }}
        - label: Confirm all merged work is on main and CI is passing
  - type: checkboxes
    id: implementation
    attributes:
      label: Implementation
      description: Perform and verify the version bump work
      options:
        - label: Create a release branch from main (named after this issue)
        - label: Update version in pyproject.toml to {{ inputs.version }}
        - label: Update RELEASES.md with notes for {{ inputs.version }}
        - label: 'Commit changes with message "chore: bump version to {{ inputs.version }}"'
        - label: 'Push branch and open PR titled "chore: release {{ inputs.version }}"'
        - label: Ensure PR references this issue with "Closes #<issue-number>"
  - type: checkboxes
    id: wrapup
    attributes:
      label: Wrap-up
      description: Post-merge tasks to finalize the release
      options:
        - label: Squash and merge the release PR
        - label: Tag the release locally (git tag {{ inputs.version }}) and push the tag
        - label: Publish GitHub Release with title {{ inputs.version }} and summary
        - label: Delete the release branch locally and on origin
  - type: textarea
    id: notes
    attributes:
      label: Follow-up
      description: Capture any remaining work, docs to update, or rollout notes
      placeholder: e.g., Announce in project board, update screenshots, schedule blog post
